name: 'Terragrunt CI/CD Pipeline'

on:
  workflow_call:
    inputs:
      working_dir:
        type: string
        required: true

env:
  tf_version: '1.5.7'  # Use the passed input
  tg_version: '0.53.2'  # Use the passed input


jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}  # Use the passed input
          tg_version: '0.53.2'  # Use the passed input
          tg_dir: ${{ inputs.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

  plan:
    needs: [ check ]
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: 'Create Terraform Plugin Cache Dir'
        run: mkdir -p ${{ github.workspace }}/.terraform.d/plugin-cache

      - name: 'Terraform Plugin Cache'
        uses: actions/cache@v4.0.1
        with:
          path: ${{ github.workspace }}/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-plugin-cache-${{ hashFiles('.terraform.lock.hcl', '*/.terraform.lock.hcl') }}

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: 'Plan'
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: '1.5.7'  # Use the passed input
          tg_version: '0.53.2'  # Use the passed input
          tg_dir: ${{ inputs.working_dir }}
          tg_command: 'plan'

  deploy:
    needs: [ plan ]
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: '1.5.7'  # Use the passed input
          tg_version: '0.53.2'  # Use the passed input
          tg_dir: ${{ inputs.working_dir }}
          tg_command: 'apply'
